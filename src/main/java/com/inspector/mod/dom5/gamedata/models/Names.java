package com.inspector.mod.dom5.gamedata.models;

import java.util.HashMap;
import java.util.Map;

public class Names {


    public static String getHumanReadableName(String attribute) {
        if (map.containsKey(attribute)) {
            return map.get(attribute);
        }
        return "<-- unmapped description: " + attribute + " -->";
    }


    private static Map<String, String> map = new HashMap<>();

    static {
        map.put("shockres", "resist shock");
        map.put("fireres", "resist fire");
        map.put("coldres", "resist cold");
        map.put("poisonres", "resist poison");
        map.put("darkvision", "darkvision");
        map.put("airshield", "air shield");
        map.put("limitedregeneration", "limited regeneration");
        map.put("woundfend", "affliction resistence");
        map.put("fixforge", "fixed forge bonus");
        map.put("autodishealer", "disease healer");
        map.put("healer", "healer");
        map.put("alch", "alchemy bonus");
        map.put("insa", "bearer grows insane");
        map.put("hp", "");
        map.put("protf", "protective force");
        map.put("protb", "");
        map.put("mr", "magic resistance");
        map.put("morale", "morale");
        map.put("str", "strength");
        map.put("att", "attack");
        map.put("def", "defence");
        map.put("prec", "precision bonus");
        map.put("enc", "encumbrance");
        map.put("mapspeed", "map move bonus");
        map.put("ap", "bonus action points");
        map.put("reinvigoration", "reinvigoration");
        map.put("pen", "magic penetration");
        map.put("stealth", "stealth");
        map.put("stealthb", "stealth");
        map.put("forest", "forest survival");
        map.put("mount", "mountain survival");
        map.put("waste", "waste survival");
        map.put("swamp", "swamp survival");
        map.put("fly", "flying");
        map.put("float", "grants floating");
        map.put("sailingshipsize", "sailing ship size");
        map.put("sailingmaxunitsize", "sailing max unit size");
        map.put("waterbreathing", "water breathing");
        map.put("giftofwater", "water breathing");
        map.put("airbr", "air breathing");
        map.put("flytr", "flying transport");
        map.put("quick", "quickness");
        map.put("eth", "ethereal");
        map.put("trample", "trample");
        map.put("bless", "blessed");
        map.put("luck", "lucky");
        map.put("fluck", "fool's luck");
        map.put("curse", "curses bearer");
        map.put("disease", "diseases bearer");
        map.put("cursed", "unremovable");
        map.put("taint", "horrormark chance");
        map.put("ldr-n", "leadership");
        map.put("ldr-u", "leadership (undead)");
        map.put("ldr-m", "leadership (magic)");
        map.put("inspirational", "inspirational leadership");
        map.put("fear", "fear");
        map.put("awe", "awe");
        map.put("animalawe", "animal awe");
        map.put("exp", "experience bonus");
        map.put("chill", "cold aura");
        map.put("heat", "heat");
        map.put("gold", "gold generation");
        map.put("F", "Fire");
        map.put("A", "Air");
        map.put("W", "Water");
        map.put("E", "Earth");
        map.put("S", "Astral");
        map.put("D", "Death");
        map.put("N", "Nature");
        map.put("B", "Blood");
        map.put("H", "Holy");
        map.put("firerange", "fire ritual range bonus");
        map.put("airrange", "air ritual range bonus");
        map.put("waterrange", "water ritual range bonus");
        map.put("earthrange", "earth ritual range bonus");
        map.put("astralrange", "astral ritual range bonus");
        map.put("deathrange", "death ritual range bonus");
        map.put("naturerange", "nature ritual range bonus");
        map.put("bloodrange", "blood ritual range bonus");
        map.put("tmpfiregems", "temporary fire gems");
        map.put("tmpairgems", "temporary air gems");
        map.put("tmpwatergems", "temporary water gems");
        map.put("tmpearthgems", "temporary earth gems");
        map.put("tmpastralgems", "temporary astral gems");
        map.put("tmpdeathgems", "temporary death gems");
        map.put("tmpnaturegems", "temporary nature gems");
        map.put("tmpbloodslaves", "temporary blood gems");
        map.put("gf", "generates fire gems");
        map.put("ga", "generates air gems");
        map.put("gw", "generates water gems");
        map.put("ge", "generates earth gems");
        map.put("gs", "generates astral gems");
        map.put("gd", "generates death gems");
        map.put("gn", "generates nature gems");
        map.put("gb", "generates blood slaves");
        map.put("berserk", "berserk when wounded");
        map.put("bers", "gone berserk");
        map.put("fireshield", "fire shield");
        map.put("banefireshield", "banefire shield");
        map.put("iceprot", "ice protection");
        map.put("bloodvengeance", "blood vengeance");
        map.put("pillagebonus", "pillage bonus");
        map.put("patrolbonus", "patrol bonus");
        map.put("castledef", "castle defence");
        map.put("supplybonus", "supply bonus");
        map.put("researchbonus", "research bonus");
        map.put("heretic", "heretic");
        map.put("douse", "");
        map.put("void", "");
        map.put("diseasecloud", "");
        map.put("reaper", "");
        map.put("crossbreeder", "");
        map.put("ivylord", "");
        map.put("spelleffect", "bearer affected by spell");
        map.put("startbattlespell", "");
        map.put("autocombatspell", "");
        map.put("itemspell", "");
        map.put("ritual", "");
        map.put("sumrit", "");
        map.put("#sumrit", "");
        map.put("sumauto", "");
        map.put("#sumauto", "");
        map.put("sumbat", "");
        map.put("#sumbat", "");
        map.put("affliction", "");
        map.put("restrictions", "");
        map.put("special", "");
        map.put("regeneration", "");
        map.put("restricted1", "");
        map.put("restricted2", "");
        map.put("restricted3", "");
        map.put("restricted4", "");
        map.put("restricted5", "");
        map.put("restricted6", "");
        map.put("aging", "advanced aging");
        map.put("corpselord", "");
        map.put("lictorlord", "");
        map.put("bloodsac", "");
        map.put("mastersmith", "");
        map.put("eyeloss", "");
        map.put("armysize", "");
        map.put("defender", "");
        map.put("cannotwear", "");
        map.put("retinue", "");
        map.put("noforgebouus", "");
        map.put("nationrebate1", "");
        map.put("nationrebate2", "");
        map.put("animalawe2", "");
        map.put("iceprot2", "");
        map.put("taskmaster", "");
        map.put("siegebonus", "");
        map.put("restricted", "restricted");
        map.put("dragonmastery", "Dragon mastery");
        map.put("patience", "patience");
        map.put("poisoncloud", "poison cloud");
        map.put("guardspiritbonus", "guardian spirit");
        map.put("reanimH", "reanimation bonus (holy)");
        map.put("reanimD", "reanimation bonus (death)");
        map.put("restricteditem", "unit restriction");
        map.put("command", "grant leadership");
        map.put("magiccommand", "grant magic leadership");
        map.put("undcommand", "grant undead leadership");
        map.put("raiseonkill", "raise victims as soulless");
        map.put("raiseshape", "raises unit");
        map.put("digest", "digest");
        map.put("aciddigest", "acid digest");
        map.put("incorporate", "incorporate");
        map.put("noforgebonus", "noforgebonus");
        map.put("hpbonus", "hp bonus");
        map.put("nationrebate", "national discount");
        map.put("itemcost1", "itemcost1");
        map.put("itemcost2", "itemcost2");
        map.put("warning", "warning");
        map.put("mapmovebonus", "map move bonus");
        map.put("slowaging", "slow aging");
        map.put("transformwearer", "transform wearer");
        map.put("feeblemindprovince", "feeblemind province");
        map.put("supayasummonbonus", "supaya summon bonus");
        map.put("bearergainsinsanity", "bearer gains insanity");
        map.put("bearergainsinsanitypermonth", "bearer gains insanity per month");
        map.put("infernoret", "inferno return");
        map.put("kokytosret", "kokytos return");
        map.put("heataura", "heataura");
        map.put("agingreductiontoallunits", "slows down aging in province");
        map.put("fastcasting", "fastcasting");
        map.put("xpgainpermonth", "xp gain per month");
        map.put("extralife", "extra life");
        map.put("bloodsearcher", "blood searcher");
        map.put("stormpower", "stormpower");
        map.put("batstartsum2", "batstartsum2");
        map.put("batstartsum3", "batstartsum3");
        map.put("batstartsum5d6", "batstartsum5d6");
        map.put("goldgen", "gold production");
        map.put("damagereversal", "damagereversal");
        map.put("mustfightinarena", "mustfightinarena");
        map.put("inquisitor", "inquisitor");
        map.put("assassin", "assassin");
        map.put("spreputeathormisfortune", "spreputeathormisfortune");
        map.put("coldaura", "coldaura");
        map.put("flyingmaxtotalsize", "flyingmaxtotalsize");
        map.put("flyingmapmove", "flyingmapmove");
        map.put("arenareward", "arenareward");
        map.put("swiftness", "swiftness");
        map.put("leper", "reaper");
        map.put("invulnerable", "invulnerability");
        map.put("horrormarkattacker", "horror mark attacker");
        map.put("minsizetoequip", "minimum size");
        map.put("maxsizetoequip", "maximum size");
        map.put("minstrtoequip", "minimum str");
        map.put("minhandstoequip", "minimum hands");
        map.put("deathgemonkill", "death gem on kill");
        map.put("deathexplosion", "explosion on death");
        map.put("chanceofattackbyknights", "attack by knights");
        map.put("domspreader", "dom spreader");
        map.put("monstermustbepresent", "monster must be present");
        map.put("banishkiller", "banish killer");
        map.put("masterritualist", "master ritualist");
        map.put("stunattackers", "overcharged");
        map.put("eatforyouth", "eat for youth");
        map.put("nomounted", "cannot be used by mounted beings");
        map.put("nocoldblood", "cannot be used by coldblooded beings");
        map.put("nodemon", "cannot be used by demons");
        map.put("noundead", "cannot be used by undead");
        map.put("noinanim", "cannot be used by inanimate beings");
        map.put("nofemale", "cannot be used by female beings");
        map.put("onlymounted", "can only be used by mounted beings");
        map.put("onlycoldblood", "can only be used by coldblooded beings");
        map.put("onlydemon", "can only be used by demons");
        map.put("onlyundead", "can only be used by undead");
        map.put("onlyinanim", "can only be used by inanimate beings");
        map.put("onlyfemale", "can only be used by female beings");
        map.put("reqeyes", "can only be used by a being with eyes");
        map.put("crown", "crown");
        map.put("twistfate", "twist fate");
        map.put("mason", "mason");
        map.put("blesssacredonly", "bless sacred only");
        map.put("returning", "returning");
        map.put("curseattacker", "curses attacker");
        map.put("seduction", "seduction ability");
        map.put("wintermove", "winter move");
        map.put("floating", "floating");
        map.put("spiritsight", "spirit sight");
        map.put("unhindered", "unhindered");
        map.put("invisibility", "invisibility");
        map.put("diseasegrinder", "diseasegrinder");
        map.put("petrification", "petrification");
        map.put("magiceye", "magiceye");
        map.put("entangle", "entangles attacker");
        map.put("singleuse", "single use");
        map.put("allunitslooklikebearertoscouts", "false army");
        map.put("onlyuseablebyfliersormounted", "can onlybe useed by fliers or mounted");
        map.put("champprize", "Arena championship prize");
    }
}
